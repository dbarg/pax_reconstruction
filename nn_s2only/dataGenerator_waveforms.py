
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------

import numpy as np
import keras
import ipca_helpers

class DataGenerator_xy(keras.utils.Sequence):

    #--------------------------------------------------------------------------
    #--------------------------------------------------------------------------
    
    def __init__(
        self,
        lst_files,
        events_per_batch=100,
        dim=(127),
        n_outputs=2
    ):
        
        #----------------------------------------------------------------------
        #----------------------------------------------------------------------
        
        self.dim              = dim
        self.events_per_batch = events_per_batch
        self.n_outputs        = n_outputs
        self.lst_files        = lst_files

        
        #----------------------------------------------------------------------
        #----------------------------------------------------------------------
        
        return
    
    
    #--------------------------------------------------------------------------
    # Batches per Epoch
    #--------------------------------------------------------------------------
    
    def __len__(self):
        return 1
        
    
    #--------------------------------------------------------------------------
    #--------------------------------------------------------------------------
    
    def __getitem__(self, index):
        
        print("__getitem__")
        
        X = np.zeros(shape=(self.events_per_batch, 127))
        y = np.zeros(shape=(self.events_per_batch, 2))

        return X, y
    
        
    
    #--------------------------------------------------------------------------
    #--------------------------------------------------------------------------
    
    def on_epoch_end(self):
        return
    

    